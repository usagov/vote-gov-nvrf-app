version: 2.1
orbs:
  gh: circleci/github-cli@2.2.0
jobs:
  update-nvrf:
    docker:
      - image: cimg/base:stable
    environment:
      URL: https://www.eac.gov/sites/default/files/eac_assets/1/6/Federal_Voter_Registration_ENG.pdf
      NVRF_FILE_NAME: Federal_Voter_Registration_ENG.pdf
      NEW_BRANCH_NAME: upload-nvrf-pdf
    steps:
      #checkout repo and install gh
      - checkout
      - gh/install
      #configure git
      - run:
          name: Configure git
          command: |
            git config user.email "circleci@df52e93b2563.(none)"
            git config user.name "Pipeline Commit"
      - run:
          name: Fetch NVRF from eac.gov
          command: |
            curl -o Federal_Voter_Registration_ENG.pdf $URL
      #save pdf as an artifact
      - store_artifacts:
          path: Federal_Voter_Registration_ENG.pdf
          destination: /pdf-files
      # Create a variable to store the PDF artifact
      - run:
          name: Replace current NVRF
          command: |
            artifacts=$(curl -X GET "https://circleci.com/api/v2/project/github/usagov/vote-gov-nvrf-app/$CIRCLE_BUILD_NUM/artifacts" \
            -H "Accept: application/json" \
            -u "$NVRF_PDF_WRITE:")
            echo "read -r -d '' STORED_ARTIFACTS \<< 'EOF_ARTIFACTS'" >> $BASH_ENV
            echo "$artifacts" >> $BASH_ENV
            echo "EOF_ARTIFACTS" >> $BASH_ENV
            cd public/files
            rm $NVRF_FILE_NAME
            echo $STORED_ARTIFACTS > $NVRF_FILE_NAME
      - run:
          name: Create Pull Request
          command: |
            echo $NVRF_PDF_WRITE | tee /tmp/key.txt
            gh auth login --with-token < /tmp/key.txt
            gh pr create --title "Update NVRF PDF" --body "Upload the new NVRF PDF from eac.gov. This is an automated job from CircleCI"
  cypress-testing:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:  
          name: install dependencies
          command: |
            cd testing  
            npm install 



workflows:
  update-nvrf-workflow:
    triggers:
      - schedule:
          cron: '0 0 * * 5'
          filters:
            branches:
              only:
                - stage
    jobs:
      - update-nvrf
      - cypress-testing





# cypress:
#     docker:
#       - image: cypress/included:cypress-12.3.0-node-16.18.1-chrome-109.0.5414.74-1-ff-109.0-edge-109.0.1518.52-1
#     environment:
#       cypress_pipeline: 1
#       cypress_cloudgov_application_name: "${project}-drupal-${CIRCLE_BRANCH}"
#     steps:
#       - checkout
#       - attach_workspace:
#           at: ~/
#       - run:
#           name: "Install cloudfoundry dependencies"
#           command: |
#             source ./scripts/pipeline/deb-basic-deps.sh
#             source ./scripts/pipeline/deb-cf-install.sh
#       - run:
#           name: "Cypress - frontend tests"
#           command: |
#             cd testing
#             cypress_baseurl="ssg-${CIRCLE_BRANCH}.vote.gov"
#             npm install
#             npm run cy:pipeline:frontEnd
#       - run:
#           name: "Cypress - frontend tests - rerun"
#           command: |
#             echo "I am the result of frontend tests failed job"
#             cd testing
#             cypress_baseurl="ssg-${CIRCLE_BRANCH}.vote.gov"
#             npm install
#             npm run cy:pipeline:frontEnd
#           when: on_fail
#       - run:
#           name: "Cypress - axe tests"
#           command: |
#             cd testing
#             cypress_baseurl="ssg-${CIRCLE_BRANCH}.vote.gov"
#             npm install
#             npm run cy:pipeline:axe
#           when: always
#       - run:
#           name: "Cypress - axe tests - rerun"
#           command: |
#             echo "I am the result of axe tests failed job"
#             cd testing
#             cypress_baseurl="ssg-${CIRCLE_BRANCH}.vote.gov"
#             npm install
#             npm run cy:pipeline:axe
#           when: on_fail
#       - store_artifacts:
#           path: testing/cypress/screenshots